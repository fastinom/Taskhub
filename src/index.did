service: () -> {
    addTask: (record {title:text; dueDate:opt nat64; description:text}) -> (variant {Ok:record {id:text; title:text; createdAt:nat64; completed:bool; dueDate:opt nat64; description:text; updatedAt:opt nat64; taskOwner:principal}; Err:variant {NotTaskOwner:principal; InvalidPayload:text}});
    completeTask: (text) -> (variant {Ok:record {id:text; title:text; createdAt:nat64; completed:bool; dueDate:opt nat64; description:text; updatedAt:opt nat64; taskOwner:principal}; Err:variant {NotTaskOwner:principal; InvalidPayload:text}});
    deleteTask: (text) -> (variant {Ok:record {id:text; title:text; createdAt:nat64; completed:bool; dueDate:opt nat64; description:text; updatedAt:opt nat64; taskOwner:principal}; Err:variant {NotTaskOwner:principal; InvalidPayload:text}});
    getTask: (text) -> (variant {Ok:record {id:text; title:text; createdAt:nat64; completed:bool; dueDate:opt nat64; description:text; updatedAt:opt nat64; taskOwner:principal}; Err:variant {NotTaskOwner:principal; InvalidPayload:text}}) query;
    getTasks: () -> (vec record {id:text; title:text; createdAt:nat64; completed:bool; dueDate:opt nat64; description:text; updatedAt:opt nat64; taskOwner:principal}) query;
}
